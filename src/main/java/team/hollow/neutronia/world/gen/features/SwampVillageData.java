package team.hollow.neutronia.world.gen.features;

import com.google.common.collect.ImmutableList;
import com.mojang.datafixers.util.Pair;
import net.minecraft.block.Blocks;
import net.minecraft.structure.pool.*;
import net.minecraft.structure.processor.RuleStructureProcessor;
import net.minecraft.structure.processor.StructureProcessor;
import net.minecraft.structure.processor.StructureProcessorRule;
import net.minecraft.structure.rule.AlwaysTrueRuleTest;
import net.minecraft.structure.rule.BlockMatchRuleTest;
import net.minecraft.structure.rule.RandomBlockMatchRuleTest;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.FeatureConfig;

public class SwampVillageData {

    private static final String MODID = "neutronia";

    static {
        ImmutableList<StructureProcessor> immutableList_1 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.COBBLESTONE, 0.1F), AlwaysTrueRuleTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/town_centers"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/swamp/town_centers/campfire_1", ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Registry.BLOCK.get(new Identifier(MODID, "willow_slab")), 0.2F), AlwaysTrueRuleTest.INSTANCE, Blocks.OAK_SLAB.getDefaultState()))))), 1)), StructurePool.Projection.RIGID));
        ImmutableList<StructureProcessor> immutableList_2 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new StructureProcessorRule(new BlockMatchRuleTest(Blocks.GRASS_PATH), new BlockMatchRuleTest(Blocks.WATER), Blocks.OAK_PLANKS.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.GRASS_PATH, 0.1F), AlwaysTrueRuleTest.INSTANCE, Blocks.GRASS_BLOCK.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.GRASS_BLOCK), new BlockMatchRuleTest(Blocks.WATER), Blocks.WATER.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.DIRT), new BlockMatchRuleTest(Blocks.WATER), Blocks.WATER.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/streets"), new Identifier(MODID, "village/swamp/terminators"), ImmutableList.of(new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/corner_01", immutableList_2), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/corner_02", immutableList_2), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/corner_03", immutableList_2), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_01", immutableList_2), 4), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_02", immutableList_2), 4), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_03", immutableList_2), 7), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_04", immutableList_2), 7), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_05", immutableList_2), 3), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/straight_06", immutableList_2), 4), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/crossroad_01", immutableList_2), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/crossroad_02", immutableList_2), 1), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/streets/crossroad_03", immutableList_2), 2), new Pair[]{new Pair<>(new SinglePoolElement("village/swamp/streets/crossroad_04", immutableList_2), 2), new Pair<>(new SinglePoolElement("village/swamp/streets/crossroad_05", immutableList_2), 2), new Pair<>(new SinglePoolElement("village/swamp/streets/crossroad_06", immutableList_2), 2), new Pair<>(new SinglePoolElement("village/swamp/streets/turn_01", immutableList_2), 3)}), StructurePool.Projection.TERRAIN_MATCHING));
        ImmutableList<StructureProcessor> immutableList_3 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.WHEAT, 0.3F), AlwaysTrueRuleTest.INSTANCE, Blocks.CARROTS.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.WHEAT, 0.2F), AlwaysTrueRuleTest.INSTANCE, Blocks.POTATOES.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.WHEAT, 0.1F), AlwaysTrueRuleTest.INSTANCE, Blocks.BEETROOTS.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/houses"), new Identifier(MODID, "village/swamp/terminators"), ImmutableList.of(new Pair<StructurePoolElement, Integer>(new SinglePoolElement(MODID + ":" + "village/swamp/houses/test", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/test2", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_3", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_4", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_5", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_6", immutableList_1), 1), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_7", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_small_house_8", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_medium_house_1", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_medium_house_2", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_big_house_1", immutableList_1), 2), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/houses/swamp_butcher_shop_1", immutableList_1), 2), new Pair[]{new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_butcher_shop_2", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_tool_smith_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_fletcher_house_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_shepherds_house_1"), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_armorer_house_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_fisher_cottage_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_tannery_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_cartographer_1", immutableList_1), 1), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_library_1", immutableList_1), 3), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_library_2", immutableList_1), 1), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_masons_house_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_weaponsmith_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_temple_3", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_temple_4", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_stable_1", immutableList_1), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_stable_2"), 2), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_large_farm_1", immutableList_3), 4), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_small_farm_1", immutableList_3), 4), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_animal_pen_1"), 1), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_animal_pen_2"), 1), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_animal_pen_3"), 5), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_accessory_1"), 1), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_meeting_point_4", ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.COBBLESTONE, 0.7F), AlwaysTrueRuleTest.INSTANCE, Blocks.MOSSY_COBBLESTONE.getDefaultState()))))), 3), new Pair<>(new SinglePoolElement("village/swamp/houses/swamp_meeting_point_5"), 1), Pair.of(EmptyPoolElement.INSTANCE, 10)}), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/terminators"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/swamp/terminators/terminator_01", immutableList_2), 1), new Pair<>(new SinglePoolElement("village/swamp/terminators/terminator_02", immutableList_2), 1), new Pair<>(new SinglePoolElement("village/swamp/terminators/terminator_03", immutableList_2), 1), new Pair<>(new SinglePoolElement("village/swamp/terminators/terminator_04", immutableList_2), 1)), StructurePool.Projection.TERRAIN_MATCHING));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/trees"), new Identifier("empty"), ImmutableList.of(new Pair<>(new FeaturePoolElement(new ConfiguredFeature<>(Feature.NORMAL_TREE, FeatureConfig.DEFAULT)), 1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/decor"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/swamp/swamp_lamp_1"), 2), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.NORMAL_TREE, FeatureConfig.DEFAULT)), 1), new Pair<>(new FeaturePoolElement(new ConfiguredFeature(Feature.PLAIN_FLOWER, FeatureConfig.DEFAULT)), 1), new Pair<>(new FeaturePoolElement(new ConfiguredFeature(Feature.HAY_PILE, FeatureConfig.DEFAULT)), 1), Pair.of(EmptyPoolElement.INSTANCE, 2)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier(MODID, "village/swamp/village"), new Identifier("empty"), ImmutableList.of(new Pair<StructurePoolElement, Integer>(new SinglePoolElement(MODID + ":" + "village/swamp/village/nitwit"), 1), new Pair<StructurePoolElement, Integer>(new SinglePoolElement("village/swamp/village/unemployed"), 7), Pair.of(EmptyPoolElement.INSTANCE, 1), new Pair<>(new SinglePoolElement("village/swamp/village/armorer"), 1), new Pair(new SinglePoolElement("village/swamp/village/butcher"), 2), new Pair(new SinglePoolElement("village/swamp/village/cartographer"), 1), new Pair(new SinglePoolElement("village/swamp/village/cleric"), 1), new Pair(new SinglePoolElement("village/swamp/village/farmer"), 8), new Pair(new SinglePoolElement("village/swamp/village/fishermen"), 3), new Pair(new SinglePoolElement("village/swamp/village/fletcher"), 2), new Pair(new SinglePoolElement("village/swamp/village/leatherworker"), 3), new Pair(new SinglePoolElement("village/swamp/village/librarian"), 2), new Pair[]{new Pair<>(new SinglePoolElement("village/swamp/village/shepherd"), 3), new Pair<>(new SinglePoolElement("village/swamp/village/toolsmith"), 4), new Pair<>(new SinglePoolElement("village/swamp/village/weaponsmith"), 1)}), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/common/animals"), new Identifier("empty"), ImmutableList.of(new Pair<StructurePoolElement, Integer>(new SinglePoolElement(MODID + ":" + "village/common/animals/cows_1"), 7), new Pair(new SinglePoolElement("village/common/animals/pigs_1"), 7), new Pair(new SinglePoolElement("village/common/animals/horses_1"), 1), new Pair(new SinglePoolElement("village/common/animals/horses_2"), 1), new Pair<>(new SinglePoolElement("village/common/animals/horses_3"), 1), new Pair(new SinglePoolElement("village/common/animals/horses_4"), 1), new Pair(new SinglePoolElement("village/common/animals/horses_5"), 1), new Pair(new SinglePoolElement("village/common/animals/sheep_1"), 1), new Pair(new SinglePoolElement("village/common/animals/sheep_2"), 1), Pair.of(EmptyPoolElement.INSTANCE, 5)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/common/sheep"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/common/animals/sheep_1"), 1), new Pair<>(new SinglePoolElement("village/common/animals/sheep_2"), 1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/common/cats"), new Identifier("empty"), ImmutableList.of(new Pair<StructurePoolElement, Integer>(new SinglePoolElement(MODID + ":" + "village/common/animals/cat_black"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_british"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_calico"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_persian"), 1), new Pair<>(new SinglePoolElement("village/common/animals/cat_ragdoll"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_red"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_siamese"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_tabby"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_white"), 1), new Pair(new SinglePoolElement("village/common/animals/cat_jellie"), 1), Pair.of(EmptyPoolElement.INSTANCE, 3)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/common/butcher_animals"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/common/animals/cows_1"), 3), new Pair<>(new SinglePoolElement("village/common/animals/pigs_1"), 3), new Pair<>(new SinglePoolElement("village/common/animals/sheep_1"), 1), new Pair<>(new SinglePoolElement("village/common/animals/sheep_2"), 1)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/common/well_bottoms"), new Identifier("empty"), ImmutableList.of(new Pair<>(new SinglePoolElement(MODID + ":" + "village/common/well_bottom"), 1)), StructurePool.Projection.RIGID));
    }

    public static void initialize() {
        System.out.println("Swamp villages added");
    }
}
